<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.github.tashoyan</groupId>
  <artifactId>visit-recommender</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>Visit Recommender</name>

  <modules>
    <module>test-resources</module>
    <module>sample-generator</module>
    <module>recommender</module>
  </modules>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <resources.filter.delimiter>@{*}</resources.filter.delimiter>
    <compiler.java.version>1.8</compiler.java.version>
    <compiler.scala.version>2.12.12</compiler.scala.version>
    <compiler.scala.compat.version>2.12</compiler.scala.compat.version>

    <sortpom-maven-plugin.version>2.12.0</sortpom-maven-plugin.version>
    <scalariform-maven-plugin.version>0.2.3</scalariform-maven-plugin.version>
    <scalastyle-maven-plugin.version>1.0.0</scalastyle-maven-plugin.version>
    <scala-maven-plugin.version>3.3.2</scala-maven-plugin.version>
    <scalatest-maven-plugin.version>2.0.2</scalatest-maven-plugin.version>
    <maven-enforcer-plugin.version>3.0.0-M3</maven-enforcer-plugin.version>
    <maven-shade-plugin.version>3.2.4</maven-shade-plugin.version>
    <maven-dependency-plugin.version>3.1.2</maven-dependency-plugin.version>
    <maven-resources-plugin.version>3.2.0</maven-resources-plugin.version>
    <maven-jar-plugin.version>3.2.0</maven-jar-plugin.version>
    <maven-install-plugin.version>3.0.0-M1</maven-install-plugin.version>
    <maven-clean-plugin.version>3.1.0</maven-clean-plugin.version>
    <maven-site-plugin.version>3.9.1</maven-site-plugin.version>
    <maven-deploy-plugin.version>3.0.0-M1</maven-deploy-plugin.version>
    <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
    <maven-surefire-plugin.version>3.0.0-M5</maven-surefire-plugin.version>

    <!--BEGIN: Spark BOM-->
    <spark.version>3.0.1</spark.version>
    <scala-xml.version>1.2.0</scala-xml.version>
    <commons-collections.version>3.2.2</commons-collections.version>
    <commons-compress.version>1.8.1</commons-compress.version>
    <commons-codec.version>1.10</commons-codec.version>
    <commons-lang.version>2.6</commons-lang.version>
    <commons-lang3.version>3.9</commons-lang3.version>
    <commons-math3.version>3.4.1</commons-math3.version>
    <guava.version>14.0.1</guava.version>
    <snappy-java.version>1.1.7.5</snappy-java.version>
    <activation.version>1.1.1</activation.version>
    <avro.version>1.8.2</avro.version>
    <paranamer.version>2.8</paranamer.version>
    <netty-all.version>4.1.47.Final</netty-all.version>
    <zookeeper.version>3.4.14</zookeeper.version>
    <fasterxml.jackson-core.version>2.10.0</fasterxml.jackson-core.version>
    <fasterxml.jackson-databind.version>2.10.0</fasterxml.jackson-databind.version>
    <slf4j.version>1.7.30</slf4j.version>
    <log4j.version>1.2.17</log4j.version>
    <!--END: Spark BOM-->

    <scopt.version>3.7.1</scopt.version>
    <scalatest.version>3.0.5</scalatest.version>
    <scalactic.version>3.0.5</scalactic.version>
    <jsr305.version>3.0.2</jsr305.version>
  </properties>

  <dependencyManagement>
    <dependencies>

      <!--BEGIN: Spark BOM-->
      <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-core_${compiler.scala.compat.version}</artifactId>
        <version>${spark.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-sql_${compiler.scala.compat.version}</artifactId>
        <version>${spark.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-catalyst_${compiler.scala.compat.version}</artifactId>
        <version>${spark.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-mllib-local_${compiler.scala.compat.version}</artifactId>
        <version>${spark.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.scala-lang</groupId>
        <artifactId>scala-library</artifactId>
        <version>${compiler.scala.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.scala-lang</groupId>
        <artifactId>scala-reflect</artifactId>
        <version>${compiler.scala.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.scala-lang.modules</groupId>
        <artifactId>scala-xml_${compiler.scala.compat.version}</artifactId>
        <version>${scala-xml.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-compress</artifactId>
        <version>${commons-compress.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>commons-collections</groupId>
        <artifactId>commons-collections</artifactId>
        <version>${commons-collections.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>commons-lang</groupId>
        <artifactId>commons-lang</artifactId>
        <version>${commons-lang.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>${commons-lang3.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>commons-codec</groupId>
        <artifactId>commons-codec</artifactId>
        <version>${commons-codec.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-math3</artifactId>
        <version>${commons-math3.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>com.thoughtworks.paranamer</groupId>
        <artifactId>paranamer</artifactId>
        <version>${paranamer.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>io.netty</groupId>
        <artifactId>netty-all</artifactId>
        <version>${netty-all.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.zookeeper</groupId>
        <artifactId>zookeeper</artifactId>
        <version>${zookeeper.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-core</artifactId>
        <version>${fasterxml.jackson-core.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>${fasterxml.jackson-databind.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.xerial.snappy</groupId>
        <artifactId>snappy-java</artifactId>
        <version>${snappy-java.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.avro</groupId>
        <artifactId>avro</artifactId>
        <version>${avro.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>javax.activation</groupId>
        <artifactId>activation</artifactId>
        <version>${activation.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-log4j12</artifactId>
        <version>${slf4j.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>log4j</groupId>
        <artifactId>log4j</artifactId>
        <version>${log4j.version}</version>
        <scope>provided</scope>
      </dependency>
      <!--END: Spark BOM-->

      <dependency>
        <groupId>com.github.scopt</groupId>
        <artifactId>scopt_${compiler.scala.compat.version}</artifactId>
        <version>${scopt.version}</version>
      </dependency>
      <dependency>
        <groupId>org.scalatest</groupId>
        <artifactId>scalatest_${compiler.scala.compat.version}</artifactId>
        <version>${scalatest.version}</version>
      </dependency>
      <dependency>
        <groupId>org.scalactic</groupId>
        <artifactId>scalactic_${compiler.scala.compat.version}</artifactId>
        <version>${scalactic.version}</version>
      </dependency>

      <!--BEGIN: Dependency convergence-->
      <dependency>
        <groupId>com.google.code.findbugs</groupId>
        <artifactId>jsr305</artifactId>
        <version>${jsr305.version}</version>
      </dependency>
      <!--END: Dependency convergence-->

    </dependencies>
  </dependencyManagement>

  <build>

    <pluginManagement>
      <plugins>

        <plugin>
          <groupId>com.github.ekryd.sortpom</groupId>
          <artifactId>sortpom-maven-plugin</artifactId>
          <version>${sortpom-maven-plugin.version}</version>
          <configuration>
            <predefinedSortOrder>custom_1</predefinedSortOrder>
            <lineSeparator>\n</lineSeparator>
            <encoding>${project.build.sourceEncoding}</encoding>
            <keepBlankLines>true</keepBlankLines>
            <sortDependencies>none</sortDependencies>
            <createBackupFile>false</createBackupFile>
            <nrOfIndentSpace>2</nrOfIndentSpace>
            <expandEmptyElements>false</expandEmptyElements>
            <keepTimestamp>true</keepTimestamp>
          </configuration>
        </plugin>

        <plugin>
          <groupId>com.github.tashoyan</groupId>
          <artifactId>scalariform-maven-plugin</artifactId>
          <version>${scalariform-maven-plugin.version}</version>
          <configuration>
            <firstArgumentOnNewline>Force</firstArgumentOnNewline>
            <firstParameterOnNewline>Force</firstParameterOnNewline>
            <allowParamGroupsOnNewlines>true</allowParamGroupsOnNewlines>
            <danglingCloseParenthesis>Force</danglingCloseParenthesis>
            <doubleIndentConstructorArguments>true</doubleIndentConstructorArguments>
            <doubleIndentMethodDeclaration>true</doubleIndentMethodDeclaration>
            <newlineAtEndOfFile>true</newlineAtEndOfFile>
            <placeScaladocAsterisksBeneathSecondAsterisk>true</placeScaladocAsterisksBeneathSecondAsterisk>
            <singleCasePatternOnNewline>false</singleCasePatternOnNewline>
            <spacesAroundMultiImports>false</spacesAroundMultiImports>
            <useUnicodeArrows>false</useUnicodeArrows>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.scalastyle</groupId>
          <artifactId>scalastyle-maven-plugin</artifactId>
          <version>${scalastyle-maven-plugin.version}</version>
          <configuration>
            <verbose>false</verbose>
            <failOnViolation>true</failOnViolation>
            <includeTestSourceDirectory>false</includeTestSourceDirectory>
            <failOnWarning>true</failOnWarning>
            <sourceDirectory>${project.basedir}/src/main/scala</sourceDirectory>
            <testSourceDirectory>${project.basedir}/src/test/scala</testSourceDirectory>
            <configLocation>scala-scalastyle.xml</configLocation>
            <outputFile>${project.build.directory}/scalastyle-output.xml</outputFile>
            <outputEncoding>${project.build.sourceEncoding}</outputEncoding>
          </configuration>
        </plugin>

        <plugin>
          <groupId>net.alchim31.maven</groupId>
          <artifactId>scala-maven-plugin</artifactId>
          <version>${scala-maven-plugin.version}</version>
          <configuration>
            <args>
              <arg>-deprecation</arg>
              <arg>-feature</arg>
              <arg>-unchecked</arg>
              <arg>-explaintypes</arg>
              <arg>-Xfatal-warnings</arg>
              <arg>-Yno-adapted-args</arg>
              <arg>-Ywarn-dead-code</arg>
              <arg>-Ywarn-numeric-widen</arg>
              <arg>-Ywarn-unused:_</arg>
              <arg>-Ywarn-value-discard</arg>
              <arg>-Xlint:_</arg>
            </args>
            <jvmArgs>
              <jvmArg>-Xmx2g</jvmArg>
            </jvmArgs>
            <source>${compiler.java.version}</source>
            <target>${compiler.java.version}</target>
            <encoding>${project.build.sourceEncoding}</encoding>
            <scalaCompatVersion>${compiler.scala.compat.version}</scalaCompatVersion>
            <checkMultipleScalaVersions>true</checkMultipleScalaVersions>
            <failOnMultipleScalaVersions>true</failOnMultipleScalaVersions>
            <sendJavaToScalac>false</sendJavaToScalac>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.scalatest</groupId>
          <artifactId>scalatest-maven-plugin</artifactId>
          <version>${scalatest-maven-plugin.version}</version>
          <configuration>
            <forkMode>once</forkMode>
            <parallel>false</parallel>
            <junitxml>.</junitxml>
            <filereports>WDF TestSuite.txt</filereports>
            <stdout>F</stdout>
            <testFailureIgnore>false</testFailureIgnore>
            <argLine>-Xmx2g</argLine>
            <systemProperties>
              <java.io.tmpdir>${project.build.directory}</java.io.tmpdir>
              <log4j.configuration>log4j-tests.xml</log4j.configuration>
            </systemProperties>
          </configuration>
        </plugin>

        <plugin>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>${maven-enforcer-plugin.version}</version>
          <configuration>
            <failFast>true</failFast>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>${maven-shade-plugin.version}</version>
          <configuration>
            <createDependencyReducedPom>false</createDependencyReducedPom>
            <filters>
              <filter>
                <!-- Workaround for java.lang.SecurityException: Invalid signature file digest for Manifest main attributes-->
                <artifact>*:*</artifact>
                <excludes>
                  <exclude>META-INF/*.SF</exclude>
                  <exclude>META-INF/*.DSA</exclude>
                  <exclude>META-INF/*.RSA</exclude>
                </excludes>
              </filter>
            </filters>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
          <configuration>
            <source>${compiler.java.version}</source>
            <target>${compiler.java.version}</target>
            <fork>true</fork>
            <compilerArgs>
              <arg>-Xlint:all</arg>
              <arg>-deprecation</arg>
              <arg>-Werror</arg>
            </compilerArgs>
          </configuration>
        </plugin>

        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>
          <configuration>
            <forkCount>1</forkCount>
            <reuseForks>false</reuseForks>
            <systemPropertyVariables>
              <java.io.tmpdir>${project.build.directory}</java.io.tmpdir>
              <log4j.configuration>log4j-tests.xml</log4j.configuration>
            </systemPropertyVariables>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${maven-resources-plugin.version}</version>
          <configuration>
            <delimiters>
              <!-- Avoid interfering with Shell or Spring - use non-standard delimiters -->
              <delimiter>${resources.filter.delimiter}</delimiter>
            </delimiters>
            <useDefaultDelimiters>false</useDefaultDelimiters>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${maven-jar-plugin.version}</version>
          <configuration>
            <archive>
              <manifest>
                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              </manifest>
            </archive>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>${maven-dependency-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>${maven-install-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>${maven-site-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>${maven-deploy-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${maven-clean-plugin.version}</version>
        </plugin>

      </plugins>
    </pluginManagement>

    <plugins>

      <plugin>
        <groupId>com.github.ekryd.sortpom</groupId>
        <artifactId>sortpom-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>Format pom-file</id>
            <goals>
              <goal>sort</goal>
            </goals>
            <phase>verify</phase>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>Display build environment</id>
            <goals>
              <goal>display-info</goal>
            </goals>
            <phase>validate</phase>
          </execution>
          <execution>
            <id>Check build environment</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireJavaVersion>
                  <version>${compiler.java.version}</version>
                </requireJavaVersion>
                <requireMavenVersion>
                  <version>3.6.3</version>
                </requireMavenVersion>
                <RequirePluginVersions />
                <banDuplicatePomDependencyVersions />
              </rules>
            </configuration>
          </execution>
          <execution>
            <id>Check transitive dependencies are consistent</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <DependencyConvergence />
              </rules>
            </configuration>
          </execution>
          <execution>
            <id>Enforce banned dependencies</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <bannedDependencies>
                  <excludes>
                    <exclude>commons-logging:commons-logging</exclude>
                  </excludes>
                  <message>Commons-logging should not be on the classpath. Use jcl-over-slf4j instead.</message>
                </bannedDependencies>
              </rules>
            </configuration>
          </execution>
          <execution>
            <id>Check no snapshot dependencies in release builds</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireReleaseDeps>
                  <message>Should use release versions in releases</message>
                  <onlyWhenRelease>true</onlyWhenRelease>
                </requireReleaseDeps>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>Check dependencies</id>
            <goals>
              <goal>analyze-only</goal>
            </goals>
            <phase>verify</phase>
            <configuration>
              <failOnWarning>true</failOnWarning>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>

  </build>

  <profiles>

    <profile>

      <id>pure-scala</id>
      <activation>
        <file>
          <exists>src/main/scala</exists>
          <missing>src/main/java</missing>
        </file>
      </activation>

      <build>
        <plugins>

          <plugin>
            <groupId>com.github.tashoyan</groupId>
            <artifactId>scalariform-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>format-scala</id>
                <goals>
                  <goal>format</goal>
                </goals>
                <phase>process-sources</phase>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.scalastyle</groupId>
            <artifactId>scalastyle-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>scalastyle</id>
                <goals>
                  <goal>check</goal>
                </goals>
                <phase>verify</phase>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>net.alchim31.maven</groupId>
            <artifactId>scala-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>compile-scala</id>
                <goals>
                  <goal>compile</goal>
                </goals>
                <phase>compile</phase>
              </execution>
              <execution>
                <id>testCompile-scala</id>
                <goals>
                  <goal>testCompile</goal>
                </goals>
                <phase>test-compile</phase>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <executions>
              <!--No Java code - disable Java compilation-->
              <execution>
                <id>default-compile</id>
                <goals>
                  <goal>compile</goal>
                </goals>
                <phase>none</phase>
              </execution>
              <execution>
                <id>default-testCompile</id>
                <goals>
                  <goal>testCompile</goal>
                </goals>
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>test-scala</id>
                <goals>
                  <goal>test</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <executions>
              <!--No Java code - disable Java tests-->
              <execution>
                <id>default-test</id>
                <goals>
                  <goal>test</goal>
                </goals>
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>

        </plugins>
      </build>

    </profile>

  </profiles>

</project>
